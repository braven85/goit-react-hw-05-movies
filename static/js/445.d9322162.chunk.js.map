{"version":3,"file":"static/js/445.d9322162.chunk.js","mappings":"sPACA,EAA+B,iCAA/B,EAA6E,+BAA7E,EAA0H,gCAA1H,EAAyK,iCAAzK,EAA4N,oCAA5N,EAAiR,mC,SCqFjR,MA5EA,WACE,IAAIA,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACb,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQF,EAAYG,IAAI,SALV,SAOLC,EAPK,0EAOpB,WAAmCC,GAAnC,0FAEUC,MAAM,4FAAD,OACmFD,IAE3FE,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLZ,EAAUY,EAAKC,YAPvB,+EAUWC,QAAQC,MAAR,OAVX,yDAPoB,sBA0CpB,OARAC,EAAAA,EAAAA,YAAU,WACM,OAAVZ,GAA4B,KAAVA,GAA2B,OAAXL,EAItCO,EAAoBF,GAHlBJ,EAAU,MAIX,CAACI,EAAOD,KAGT,iCACE,mBACEc,UAAWC,EACXC,QAAS,WACPzB,GAAU,IAHd,sBAQEE,EAAOwB,UACP,4BACE,kBAAMH,UAAWC,EAAmBG,SAjC3B,SAACC,GAChBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAYF,EAAKG,SAASvB,MAAMwB,MACpB,KAAdF,IAGFvB,EAAe,CAAEC,MAAOsB,IACxBpB,EAAoBF,GAEtBoB,EAAKK,UAuBC,WACE,kBAAOZ,UAAWC,EAAoBY,KAAK,OAAOC,KAAK,WACvD,mBAAQd,UAAWC,EAAqBY,KAAK,SAA7C,wBAIF,eAAIb,UAAWC,EAAf,SACGnB,EAAOiC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMjB,UAAWC,EAAuBiB,GAAE,kBAAaF,GAAvD,SACGC,KAFID,WAShBrC,EAAOwB,UAAW,SAAC,KAAD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"GoBackButton\":\"MoviesPage_GoBackButton__5YwYI\",\"SearchForm\":\"MoviesPage_SearchForm__SAK3c\",\"SearchInput\":\"MoviesPage_SearchInput__OncxV\",\"SearchButton\":\"MoviesPage_SearchButton__Fozif\",\"FoundMoviesList\":\"MoviesPage_FoundMoviesList__k6cNJ\",\"FoundMovieItem\":\"MoviesPage_FoundMovieItem__04ndM\"};","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  Outlet,\r\n  useNavigate,\r\n  useParams,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport styles from \"./MoviesPage.module.css\";\r\n\r\nfunction MoviesPage() {\r\n  let navigate = useNavigate();\r\n  let params = useParams();\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useSearchParams();\r\n  const query = searchQuery.get(\"query\");\r\n\r\n  async function fetchSearchedMovies(searchInput) {\r\n    try {\r\n      await fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=ee05cb5c4e7bec8bf2cb81503e07020d&query=${searchInput}`\r\n      )\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setMovies(data.results);\r\n        });\r\n    } catch (err) {\r\n      return console.error(err);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const formQuery = form.elements.query.value;\r\n    if (formQuery === \"\") {\r\n      return;\r\n    } else {\r\n      setSearchQuery({ query: formQuery });\r\n      fetchSearchedMovies(query);\r\n    }\r\n    form.reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query === null || query === \"\" || movies === null) {\r\n      setMovies([]);\r\n      return;\r\n    }\r\n    fetchSearchedMovies(query);\r\n  }, [query, setSearchQuery]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={styles.GoBackButton}\r\n        onClick={() => {\r\n          navigate(-1);\r\n        }}\r\n      >\r\n        Go back\r\n      </button>\r\n      {!params.movieId && (\r\n        <div>\r\n          <form className={styles.SearchForm} onSubmit={onSubmit}>\r\n            <input className={styles.SearchInput} type=\"text\" name=\"query\" />\r\n            <button className={styles.SearchButton} type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <ul className={styles.FoundMoviesList}>\r\n            {movies.map(({ id, original_title }) => (\r\n              <li key={id}>\r\n                <Link className={styles.FoundMovieItem} to={`/movies/${id}`}>\r\n                  {original_title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {params.movieId && <Outlet />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"names":["navigate","useNavigate","params","useParams","useState","movies","setMovies","useSearchParams","searchQuery","setSearchQuery","query","get","fetchSearchedMovies","searchInput","fetch","then","resp","json","data","results","console","error","useEffect","className","styles","onClick","movieId","onSubmit","e","preventDefault","form","currentTarget","formQuery","elements","value","reset","type","name","map","id","original_title","to"],"sourceRoot":""}