{"version":3,"file":"static/js/440.d6438302.chunk.js","mappings":"mJAaA,IAbA,WACE,OACE,eACEA,MAAO,CACLC,MAAO,OACPC,OAAQ,MACRC,gBAAiB,0CACjBC,YAAa,S,6ICNrB,EAA4B,oCAA5B,EAAuF,+CAAvF,EAAoJ,sCAApJ,EAAsM,oCAAtM,EAA8P,4CAA9P,EAAyT,uC,SCgGzT,MA3FA,WACE,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAF2B,wCAI3B,WAA8BC,GAA9B,0FAEUC,MAAM,sCAAD,OAC6BD,EAD7B,8CAGRE,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLN,EAASM,MAPjB,+EAUWC,QAAQC,MAAR,OAVX,yDAJ2B,uBAkB3BC,EAAAA,EAAAA,YAAU,YAlBiB,oCAmBzBC,CAAed,KACd,CAACA,EAASI,IAEb,IACEW,EAMEZ,EANFY,eACAC,EAKEb,EALFa,YACAC,EAIEd,EAJFc,aACAC,EAGEf,EAHFe,SACAC,EAEEhB,EAFFgB,OACAC,EACEjB,EADFiB,aAGIC,EAA2B,GAAfJ,EAElB,OACE,iCACE,iBAAKK,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,cACmBC,IAAhBR,GACC,gBACEM,UAAWC,EACXE,IAAG,wCAAmCT,GACtCU,IAAI,WAJP,YAUH,iBAAKJ,UAAWC,EAAhB,WACE,0BACGR,EADH,KACqBK,EAAeA,EAAaO,MAAM,EAAG,GAAK,GAD/D,QAGA,wCAAgBN,EAAhB,QACA,sCACA,uBAAIH,KACJ,oCACA,4BACcM,IAAXL,EACGA,EAAOS,KAAI,gBAAGvB,EAAH,EAAGA,GAAIwB,EAAP,EAAOA,KAAP,OACT,4BACGA,EACA,OAFQxB,MAFhB,qBAWP,SAACyB,EAAA,EAAD,KACA,iBAAKR,UAAWC,EAAhB,WACE,oDACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAACQ,EAAA,EAAD,CACEC,KAAI,0CAAqChC,EAArC,SACJiC,YAAW,YAGf,yBACE,SAACF,EAAA,EAAD,CACEC,KAAI,0CAAqChC,EAArC,YACJiC,YAAW,qBAKnB,SAACH,EAAA,EAAD,KACA,SAAC,KAAD,S,0CC7EN,IAbA,YAAgD,IAAtBE,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAC9B,OACE,SAAC,KAAD,CACEX,UAAW,qBAAGY,SACD,0BAA4B,6BAEzCC,GAAIH,EAJN,SAMGC","sources":["components/HorizonalLine/HorizontalLine.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","components/NavigationLink/NavigationLink.jsx"],"sourcesContent":["function HorizontalLine() {\r\n  return (\r\n    <hr\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"6px\",\r\n        backgroundImage: \"linear-gradient(0deg, #FFFFFF, #000cb1)\",\r\n        borderWidth: \"0\",\r\n      }}\r\n    ></hr>\r\n  );\r\n}\r\n\r\nexport default HorizontalLine;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"MovieDetailsPage_Container__X5l1O\",\"MoviePosterContainer\":\"MovieDetailsPage_MoviePosterContainer__XHVM+\",\"MoviePoster\":\"MovieDetailsPage_MoviePoster__C64NY\",\"MovieInfo\":\"MovieDetailsPage_MovieInfo__jmpYZ\",\"MoreInfoContainer\":\"MovieDetailsPage_MoreInfoContainer__yJuHF\",\"MoreInfoList\":\"MovieDetailsPage_MoreInfoList__hsyis\"};","import { useEffect, useState } from \"react\";\r\nimport { Outlet, useParams } from \"react-router-dom\";\r\nimport HorizontalLine from \"../HorizonalLine/HorizontalLine\";\r\nimport NavigationLink from \"../NavigationLink/NavigationLink\";\r\nimport styles from \"./MovieDetailsPage.module.css\";\r\n\r\nfunction MoviesDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  async function fetchMovieById(id) {\r\n    try {\r\n      await fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=ee05cb5c4e7bec8bf2cb81503e07020d`\r\n      )\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setMovie(data);\r\n        });\r\n    } catch (err) {\r\n      return console.error(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMovieById(movieId);\r\n  }, [movieId, setMovie]);\r\n\r\n  const {\r\n    original_title,\r\n    poster_path,\r\n    vote_average,\r\n    overview,\r\n    genres,\r\n    release_date,\r\n  } = movie;\r\n\r\n  const userScore = vote_average * 10;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.Container}>\r\n        <div className={styles.MoviePosterContainer}>\r\n          {poster_path !== undefined ? (\r\n            <img\r\n              className={styles.MoviePoster}\r\n              src={`http://image.tmdb.org/t/p/w500${poster_path}`}\r\n              alt=\"poster\"\r\n            />\r\n          ) : (\r\n            `poster`\r\n          )}\r\n        </div>\r\n        <div className={styles.MovieInfo}>\r\n          <h2>\r\n            {original_title} ({release_date ? release_date.slice(0, 4) : \"\"})\r\n          </h2>\r\n          <p>User Score: {userScore}%</p>\r\n          <h3>Overview</h3>\r\n          <p>{overview}</p>\r\n          <h3>Genres</h3>\r\n          <p>\r\n            {genres !== undefined\r\n              ? genres.map(({ id, name }) => (\r\n                  <span key={id}>\r\n                    {name}\r\n                    {\"  \"}\r\n                  </span>\r\n                ))\r\n              : `No genres`}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <HorizontalLine />\r\n      <div className={styles.MoreInfoContainer}>\r\n        <h2>Additional information</h2>\r\n        <ul className={styles.MoreInfoList}>\r\n          <li>\r\n            <NavigationLink\r\n              link={`/goit-react-hw-05-movies/movies/${movieId}/cast`}\r\n              description={`Cast`}\r\n            />\r\n          </li>\r\n          <li>\r\n            <NavigationLink\r\n              link={`/goit-react-hw-05-movies/movies/${movieId}/reviews`}\r\n              description={`Reviews`}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <HorizontalLine />\r\n      <Outlet />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesDetailsPage;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nfunction NavigationLink({ link, description }) {\r\n  return (\r\n    <NavLink\r\n      className={({ isActive }) =>\r\n        isActive ? \"navigation__item active\" : \"navigation__item inactive\"\r\n      }\r\n      to={link}\r\n    >\r\n      {description}\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default NavigationLink;\r\n"],"names":["style","width","height","backgroundImage","borderWidth","movieId","useParams","useState","movie","setMovie","id","fetch","then","resp","json","data","console","error","useEffect","fetchMovieById","original_title","poster_path","vote_average","overview","genres","release_date","userScore","className","styles","undefined","src","alt","slice","map","name","HorizontalLine","NavigationLink","link","description","isActive","to"],"sourceRoot":""}